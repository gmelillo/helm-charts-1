apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "renovate.fullname" . }}
  labels:
    {{- include "renovate.labels" . | nindent 4 }}
  {{- with .Values.cronjob.labels }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
{{- if .Values.cronjob.annotations }}
  annotations:
    {{ toYaml .Values.cronjob.annotations | nindent 4 }}
{{- end }}
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  {{- with .Values.cronjob.concurrencyPolicy }}
  concurrencyPolicy: {{ . }}
  {{- end }}
  {{- with .Values.cronjob.failedJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ . }}
  {{- end }}
  {{- with .Values.cronjob.successfulJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ . }}
  {{- end }}
  jobTemplate:
    metadata:
      labels:
        {{- include "renovate.selectorLabels" . | nindent 8 }}
    spec:
      template:
        metadata:
          labels:
            {{- include "renovate.selectorLabels" . | nindent 12 }}
          {{- with .Values.pod.labels }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          annotations:
            checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum | indent 12 }}
        {{- if and .Values.secrets (not .Values.existingSecret) }}
            checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum | indent 12 }}
        {{- end }}
        {{- if and .Values.ssh_config.enabled (not .Values.ssh_config.existingSecret) }}
            checksum/ssh_secret: {{ include (print $.Template.BasePath "/ssh-secret.yaml") . | sha256sum | indent 12 }}
        {{- end }}
        {{- if .Values.pod.annotations }}
            {{ toYaml .Values.pod.annotations | nindent 12 }}
        {{- end }}
        spec:
          serviceAccountName: {{ include "renovate.serviceAccountName" . }}
          restartPolicy: {{ .Values.cronjob.jobRestartPolicy }}
          containers:
            - name: {{ .Chart.Name }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
              imagePullPolicy: {{ .Values.image.pullPolicy }}
              volumeMounts:
              - name: config-volume
                mountPath: /usr/src/app/config.json
                subPath: config.json
              {{- if .Values.ssh_config.enabled }}
              - name: ssh-config-volume
                mountPath: /home/ubuntu/.ssh
                readOnly: true
              {{- end }}
              {{- if or .Values.secrets .Values.existingSecret .Values.envFrom }}
              envFrom:
                {{- if or .Values.secrets .Values.existingSecret }}
                - secretRef:
                    name: {{ template "renovate.secretName" . }}
                {{- end }}
                {{- with .Values.envFrom }}
                  {{- toYaml . | nindent 16 }}
                {{- end }}
              {{- end }}
              resources:
                {{ toYaml .Values.resources | nindent 16 }}
          volumes:
            - name: config-volume
              configMap:
                name: {{ include "renovate.fullname" . }}-config
            {{- if .Values.ssh_config.enabled }}
            - name: ssh-config-volume
              secret:
                secretName: {{ include "renovate.sshSecretName" .}}
            {{- end }}
        {{- with .Values.nodeSelector }}
          nodeSelector:
            {{ toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.affinity }}
          affinity:
            {{ toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.tolerations }}
          tolerations:
            {{ toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.securityContext }}
          securityContext:
            {{ toYaml . | nindent 12 }}
        {{- end }}
        {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 12 }}
        {{- end }}
